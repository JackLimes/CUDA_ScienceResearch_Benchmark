#include "cuda_runtime.h"
#include "device_launch_parameters.h"
#include <ctime>
#include <stdio.h>





__global__ void agg(unsigned int *b, unsigned int size) {
	b[blockIdx.x] = b[blockIdx.x] + 1;
}

int main(void) {

	const short N = 10;
	unsigned int b[N] = { 0 };
	unsigned int *d_b;
	cudaSetDevice(0);
	clock_t begin = clock();


	while (clock() - begin < 10000){
		// Allocate space for device copies of a, b, c
		cudaMalloc((void **)&d_b, N * sizeof(int));

		// Copy inputs to device
		cudaMemcpy(d_b, &b, N * sizeof(int), cudaMemcpyHostToDevice);

		agg <<<N, 1 >>> (d_b, N);

		// Copy result back to host
		cudaMemcpy(&b, d_b, N * sizeof(int), cudaMemcpyDeviceToHost);

		// Cleanup
		cudaFree(d_b);

		
		
		//getchar();
	}

	printf("Result: %d.\n", (b[0] * N));
	printf("%d", (clock() - begin));
	getchar();
	cudaDeviceReset();
	return 0;

}
